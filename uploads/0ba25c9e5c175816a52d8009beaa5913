#include<iostream>
#include<bits/stdc++.h>
using namespace std;



int solve(int index,int capacity,vector<int>&wt,vector<int>&val,vector<vector<int>>&dp)
{
    if(index==0)
    {
        if(wt[0]<=capacity)
        {
            return val[0];
        }
        else{
            return 0;
        }
    }
    
    if(dp[index][capacity]!=-1) return dp[index][capacity];

    int inc=0;
    if(wt[index]<=capacity)
    {
        inc=val[index]+solve(index-1,capacity-wt[index],wt,val,dp);
    }
    int exe=0+solve(index-1,capacity,wt,val,dp);

    return dp[index][capacity]=max(inc,exe);

}
int knap(int n,int W,vector<int>&wt,vector<int>&val,vector<int>&vis)
{
    // vector<vector<int>>dp(n,vector<int>(W+1,-1));
    // return solve(n-1,W,wt,val,dp);

    vector<vector<int>>dp(n,vector<int>(W+1,0));
    for(int i=wt[0];i<=W;i++)
    {
        dp[0][i]=val[0];
    }

    for(int i=1;i<n;i++)
    {
        for(int j=0;j<=W;j++)
        {
             int inc=0;
            if(j>=wt[i])
            {
                inc=val[i]+dp[i-1][j-wt[i]];
            }
            int exe=0+dp[i-1][j];

             dp[i][j]=max(inc,exe);
        }
    }

    // for(int i=0;i<n;i++)
    // {
    //     for(int j=0;j<=W;j++)
    //     {
    //         cout<<dp[i][j]<<" ";
    //     }
    //     cout<<endl;
    // }

    int res=dp[n-1][W];
    int w=W;

    for(int i=n-1;i>=0 and res>0;i--)
    {
        if(i==0)
        {
            if(dp[0][w]==res)
            {
                // cout<<i<<endl;
                vis.push_back(i);
                continue;
            }
        }

            if(dp[i-1][w]==res)
            {
                continue;
            }
            else
            {
                // cout<<i<<" "<<endl;
                vis.push_back(i);
                res-=val[i];
                w-=wt[i];
            }
        
    }
    return dp[n-1][W];
}
int main()
{
    int n,W;

    cout<<"Enter The length of the array: ";
    cin>>n;
    cout<<"\n Enter The maximum capacity of the knapsack: ";
    cin>>W;
    vector<int>wt(n);
    vector<int>val(n);

    for(int i=0;i<n;i++)
    {
        cout<<"Enter the weight of the "<<i<<"th element: ";
        cin>>wt[i];
    }
    for(int i=0;i<n;i++)
    {
        cout<<"Enter the profit associated with the "<<i<<"th element: ";
        cin>>val[i];
    }
     
     vector<int>vis;
    int ans=knap(n,W,wt,val,vis);
    cout<<"\nMax valueeeeeee is : "<<ans<<endl;


    cout<<"Indexes of the Items included are (1 based indexing): "<<endl;
    for(auto it:vis)
    {
        cout<<it<<" ";
    }
    cout<<endl;
}